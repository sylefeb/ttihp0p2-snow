// SL 2024-08-27 @sylefeb
// ========================================================
// MIT license
// ========================================================

// include VGA signal generator
$include('../common/vga.si')

// -------------------------

$$ W = 640
$$ H = 480

unit vga_demo(
  output! uint2 video_r,
  output! uint2 video_g,
  output! uint2 video_b,
  output  uint1 video_hs,
  output  uint1 video_vs,
) {

  vga vga(
    vga_hs :> video_hs,
    vga_vs :> video_vs,
  );

  int10 dotpos(0);
  int2  speed(0);
  int2  inv_speed(0);
  int12 rand_x(0);

  uint16 frame(0); // frame counter
  uint1  prev_vs(0);

  always {

    // shading pipeline
    {
      // pipeline start

      uint10  x = vga.vga_x;
      uint10  y = vga.vga_y;

    ->

      rand_x = (x == 0) ? 12d1 : (rand_x * 12d31421 + 12d6927);
      speed  = rand_x[10,2];

    ->

      dotpos = (frame >> speed) + rand_x;

    ->

      uint2 s = (dotpos == y) ? 2b11 : 2b00;
      video_r = vga.active ? s : 2b0;
      video_g = vga.active ? s : 2b0;
      video_b = 2b0;

    }

    // count frames
    uint1 frame_tick  = (prev_vs & ~vga.vga_vs); // start of vsynch
    frame    = frame_tick ? (frame + 1) : frame;
    prev_vs  = vga.vga_vs;

  }

}

// -------------------------
